name: Clone Doku Repository

on:
  schedule:
    - cron: '0 17 * * *'  # Daily sync at 5pm
  workflow_dispatch:  

jobs:
  mirror:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        repo: 
          - { name: 'pcg-gcp/gcp-mco-repo-test-mirror', token: 'GCP_MCO_SOURCE_MIRROR_TOKEN', path: 'source_repo', subfolder: "repo1" }
          - { name: 'pcg-gcp/gcp-mco-additional-source-mirror-repo', token: 'GCP_MCO_ADDITIONAL_SOURCE_MIRROR_TOKEN', path: 'source_repo2', subfolder: "repo2" }

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.repo.name }}
          token: ${{ secrets[matrix.repo.token] }}
          path: ${{ matrix.repo.path }}
          fetch-depth: 0    # avoid shallow clone

      - name: Checkout target repository
        uses: actions/checkout@v3
        with:
          repository: cw-jimmy-cu/gcp-mco-target-repo-mirror
          token: ${{ secrets.TEST_MCO_TARGET_MIRROR_TOKEN }}
          path: target_repo
          fetch-depth: 0   # avoid shallow clone

      - name: Set up SSH for target repository
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_TARGET }}

      - name: Debugging - List source_repo contents
        run: |
          echo "Contents of source_repo:"
          ls -la source_repo

      - name: Debugging - List source_repo2 contents
        run: |
          echo "Contents of source_repo2:"
          ls -la source_repo2

      - name: Sync source with target
        run: |
          git config --global user.email "jimmy.cu@pcg.io"
          git config --global user.name "Jimmy Cu"

          # Ensure we are in the right directory
          cd target_repo

          git pull origin main
          
          # Check if the source_content directory exists
          if [ ! -d "source_content/${{ matrix.repo.subfolder }}" ]; then
            echo "source_content/${{ matrix.repo.subfolder }} directory does not exist. Using cp to initialize."
            mkdir -p source_content/${{ matrix.repo.subfolder }}
            cp -r ../${{ matrix.repo.path }}/* source_content/${{ matrix.repo.subfolder }}
          else
            echo "source_content/${{ matrix.repo.subfolder }} directory exists. Using rsync to sync."
            rsync -av --delete ../${{ matrix.repo.path }}/ source_content/${{ matrix.repo.subfolder }}
          fi

          # Debugging - List source_content contents
          echo "Contents of source_content after sync:"
          ls -la source_content
          
          # Add changes to git
          git add source_content/${{ matrix.repo.subfolder }}

          # Commit changes, if any
          if git diff-index --quiet HEAD; then
            echo "No changes to commit"
          else
            git commit -m "Sync with source repository ${{ matrix.repo.name }}"
            # Push changes
            git push origin main

      - name: Debugging - List target_repo contents
        run: |
          echo "Contents of target_repo:"
          ls -la target_repo/source_content
